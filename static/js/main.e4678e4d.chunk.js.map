{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","contactsActions","filterContacts","ContactForm","state","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","items","onFormSubmit","find","item","toLowerCase","alert","reset","this","onSubmit","form","type","placeholder","onChange","disabled","Component","connect","contacts","dispatch","ContactListItem","onDeleteContact","onClick","contactsToShow","allContacts","filter","normalizedFilter","contact","includes","contactId","map","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e4678e4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__PBYGn\",\"form-btn\":\"ContactForm_form-btn__18y6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-name\":\"ContactListItem_contact-name__beRyo\",\"delete-contact-btn\":\"ContactListItem_delete-contact-btn__1BUtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__10vRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"ContactList_list-item__36FLv\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filterContacts = createAction('contacts/filter');\r\n\r\nconst contactsActions = {\r\n  addContact,\r\n  filterContacts,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactsActions;\r\n\r\n// =============== без використання redux-toolkit ===============\r\n// import shortid from 'shortid';\r\n// import types from './contacts-types';\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filterContacts = value => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n// const contactsActions = {\r\n//   addContact,\r\n//   filterContacts,\r\n//   deleteContact,\r\n// };\r\n\r\n// export default contactsActions;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const { items, onFormSubmit } = this.props;\r\n    const { name } = this.state;\r\n\r\n    if (name === '') {\r\n      return;\r\n    }\r\n\r\n    const isInContacts = items.find(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (isInContacts) {\r\n      alert(`${name} is already in contacts`);\r\n    } else {\r\n      onFormSubmit(this.state);\r\n    }\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className=\"input-field\"\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Phone Number\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            className=\"input-field\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className={[`button ${styles['form-btn']}`]}\r\n          disabled={name === '' || number === '' ? true : false}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFormSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <p>\r\n      <span className={styles['contact-name']}>{name}: </span>\r\n      {number}\r\n    </p>\r\n\r\n    <button\r\n      type=\"button\"\r\n      onClick={onDeleteContact}\r\n      className={[`button ${styles['delete-contact-btn']}`]}\r\n    >\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactListItem from '../ContactListItem';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles['list-item']} key={id}>\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst contactsToShow = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  return {\r\n    contacts: contactsToShow(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: contactId =>\r\n    dispatch(contactsActions.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"label\">\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"input-field\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event =>\r\n    dispatch(contactsActions.filterContacts(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => (\n  <Container>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n    <ContactList />\n  </Container>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\r\n\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n\r\n// =============== без використання redux-toolkit ===============\r\n// import { combineReducers } from 'redux';\r\n// import types from './contacts-types';\r\n\r\n// const initialContacts = [\r\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n// ];\r\n\r\n// const items = (state = initialContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development', // включаємо devTools лише у режимі розробки (у production не буде)\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// =============== без використання redux-toolkit та redux-persist ===============\r\n// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n// import contactsReducer from './contacts/contacts-reducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}